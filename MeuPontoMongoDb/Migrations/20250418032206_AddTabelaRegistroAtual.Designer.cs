// <auto-generated />
using System;
using MeuPontoMongoDb.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MeuPontoMongoDb.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250418032206_AddTabelaRegistroAtual")]
    partial class AddTabelaRegistroAtual
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MeuPontoMongoDb.Models.BancoHoras", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2")
                        .HasColumnName("data");

                    b.Property<int>("QtdSolicitacoesPendentes")
                        .HasColumnType("int")
                        .HasColumnName("qtd_solicitacoes_pendentes");

                    b.Property<TimeSpan>("TotalHorasTrabalhadas")
                        .HasColumnType("time")
                        .HasColumnName("total_horas_trabalhadas");

                    b.HasKey("UserId");

                    b.ToTable("tab_banco_horas");
                });

            modelBuilder.Entity("MeuPontoMongoDb.Models.Cadastro", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<long>("CPF")
                        .HasColumnType("bigint")
                        .HasColumnName("cpf");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cargo");

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("departamento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("senha");

                    b.HasKey("UserId");

                    b.ToTable("tab_cadastro");
                });

            modelBuilder.Entity("MeuPontoMongoDb.Models.Perfil", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<string>("UrlProfilePic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("url_profile_pic");

                    b.HasKey("UserId");

                    b.ToTable("tab_perfil");
                });

            modelBuilder.Entity("MeuPontoMongoDb.Models.Registro", b =>
                {
                    b.Property<int>("IdRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_registro");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRegistro"));

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_inicio");

                    b.Property<DateTime?>("Fim")
                        .HasColumnType("datetime2")
                        .HasColumnName("fim");

                    b.Property<TimeSpan>("HorarioExtra")
                        .HasColumnType("time")
                        .HasColumnName("horara_extra");

                    b.Property<int>("QtdeBatidas")
                        .HasColumnType("int")
                        .HasColumnName("qtde_batidas");

                    b.Property<DateTime?>("SaidaAlmoco")
                        .HasColumnType("datetime2")
                        .HasColumnName("saida_almoco");

                    b.Property<TimeSpan?>("TotalHora")
                        .HasColumnType("time")
                        .HasColumnName("total_hora");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<DateTime?>("VoltaAlmoco")
                        .HasColumnType("datetime2")
                        .HasColumnName("volta_almoco");

                    b.HasKey("IdRegistro");

                    b.HasIndex("UserId");

                    b.ToTable("tab_registro");
                });

            modelBuilder.Entity("MeuPontoMongoDb.Models.Solicitacao", b =>
                {
                    b.Property<int>("IdSolicitacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_solicitacao");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSolicitacao"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<TimeSpan>("Horario")
                        .HasColumnType("time")
                        .HasColumnName("horario");

                    b.Property<int>("IdRegistro")
                        .HasColumnType("int")
                        .HasColumnName("id_registro");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("observacao");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("IdSolicitacao");

                    b.HasIndex("IdRegistro");

                    b.HasIndex("UserId");

                    b.ToTable("tab_solicitacao");
                });

            modelBuilder.Entity("MeuPontoMongoDb.Models.BancoHoras", b =>
                {
                    b.HasOne("MeuPontoMongoDb.Models.Cadastro", "Usuario")
                        .WithOne("BancoHoras")
                        .HasForeignKey("MeuPontoMongoDb.Models.BancoHoras", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MeuPontoMongoDb.Models.Perfil", b =>
                {
                    b.HasOne("MeuPontoMongoDb.Models.Cadastro", "Usuario")
                        .WithOne("Perfil")
                        .HasForeignKey("MeuPontoMongoDb.Models.Perfil", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MeuPontoMongoDb.Models.Registro", b =>
                {
                    b.HasOne("MeuPontoMongoDb.Models.Cadastro", "Usuario")
                        .WithMany("Registros")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MeuPontoMongoDb.Models.Solicitacao", b =>
                {
                    b.HasOne("MeuPontoMongoDb.Models.Registro", "Registro")
                        .WithMany("Solicitacoes")
                        .HasForeignKey("IdRegistro")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MeuPontoMongoDb.Models.Cadastro", "Usuario")
                        .WithMany("Solicitacoes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Registro");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MeuPontoMongoDb.Models.Cadastro", b =>
                {
                    b.Navigation("BancoHoras");

                    b.Navigation("Perfil");

                    b.Navigation("Registros");

                    b.Navigation("Solicitacoes");
                });

            modelBuilder.Entity("MeuPontoMongoDb.Models.Registro", b =>
                {
                    b.Navigation("Solicitacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
